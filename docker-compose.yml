version: "3"
# media containers
services:

  ombi:
    image: linuxserver/ombi:latest
    container_name: ombi
    restart: always
    ports:
      - 3579:3579
    environment:
      - "Logging:LogLevel:Default=Warning"
      - "Logging:LogLevel:System=Warning"
      - PUID=1001
      - PGID=1002
      - TZ=Europe/Paris
    volumes:
      - /mnt/gloubinours/jellies-db/ombi/config:/config
      - /etc/localtime:/etc/localtime:ro
      - "${PWD}/ombi/appsettings.json:/opt/ombi/appsettings.json"
  sonarr:
    image: linuxserver/sonarr:latest
    restart: always
    #    user: 1001:1002
    environment:
      - PUID=1020
      - PGID=1002
      - TZ=Europe/Paris
    volumes:
      - /mnt/gloubinours/jellies-db/sonarr/config:/config
      - /mnt/gloubinours/shows:/tv
      - /mnt/gloubinours/transmission:/downloads
    ports:
      - 8989:8989

  radarr:
    image: "linuxserver/radarr:nightly"
    container_name: radarr
    restart: always
    environment:
      - "PUID=1000"
      - "PGID=1002"
      - TZ=Europe/Paris
    volumes:
      - /mnt/gloubinours/jellies-db/radarr/config:/config
      - /mnt/gloubinours/movies:/movies
      - /mnt/gloubinours/transmission:/downloads
    ports:
      - "7878:7878"

  bazarr:
    image: linuxserver/bazarr:latest
    restart: always
    environment:
      - PUID=1000
      - PGID=1002
      - TZ=Europe/Paris
    volumes:
      - /mnt/gloubinours/jellies-db/bazarr/config:/config
      - /mnt/gloubinours/movies:/movies
      - /mnt/gloubinours/shows:/tv
    ports:
      - 6767:6767
    # labels:
    #   - "traefik.enable=true"
    #   - "traefik.http.services.bazarr.loadbalancer.server.port=6767"
    #   - "traefik.http.routers.bazarr.rule=Host(`bazarr.doxx.fr`)"
    #   - "traefik.http.routers.bazarr.middlewares=private@file"

  lidarr:
    image: linuxserver/lidarr:latest
    restart: always
    environment:
      - PUID=1000
      - PGID=1002
      - TZ=Europe/Paris
    ports: 
      - 8686:8686
    volumes:
      - /mnt/gloubinours/jellies-db/lidarr/config:/config
      - /mnt/gloubinours/music:/music
      - /mnt/gloubinours/transmission:/downloads
    # labels:
    #   - "traefik.enable=true"
    #   - "traefik.http.services.lidarr.loadbalancer.server.port=8686"
    #   - "traefik.http.routers.lidarr.rule=Host(`lidarr.doxx.fr`)"
    #   - "traefik.http.routers.lidarr.middlewares=private@file"

        #
        #readarr:
        #    image: linuxserver/readarr:nightly
        #    restart: always
        #    environment:
        #      - PUID=33
        #      - PGID=33
        #      - TZ=America/New_York
        #    volumes:
        #      - /tank/container_data/readarr:/config
        #      - /tank/cloud/books:/books
        #      - /tank/downloads:/downloads
        #    expose:
        #      - 8787
        #    # depends_on:
        #    #   - qbittorrent
        #    #   - nzbget
        #    #   - prowlarr
        #    labels:
        #      - "traefik.enable=true"
        #      - "traefik.http.services.readarr.loadbalancer.server.port=8787"
        #      - "traefik.http.routers.readarr.rule=Host(`readarr.doxx.fr`)"
        #      - "traefik.http.routers.readarr.middlewares=private@file"
        #

  jackett:
    image: linuxserver/jackett:latest
    container_name: jackett
    restart: unless-stopped
    ports:
      - "9117:9117"
    environment:
      - PUID=1001
      - PGID=1001
      - TZ=Europe/Paris
    volumes:
      - /mnt/gloubinours/jellies-db/jackett/config:/config
      - /etc/localtime:/etc/localtime:ro


# curl -L -o docker-compose.yml "https://dev.funkwhale.audio/funkwhale/funkwhale/raw/${FUNKWHALE_VERSION}/deploy/docker-compose.yml"

  postgres:
    restart: unless-stopped
    # networks:
    #   - default
    env_file: .env
    environment:
      - "POSTGRES_HOST_AUTH_METHOD=trust"
    image: postgres:14
    volumes:
      - ./data/postgres:/var/lib/postgresql/data

  redis:
    restart: unless-stopped
    # networks:
    #   - default
    env_file: .env
    image: redis:6
    volumes:
      - ./data/redis:/data

  celeryworker:
    restart: unless-stopped
    image: funkwhale/funkwhale:${FUNKWHALE_VERSION:-latest}
    # networks:
    #   - default
    depends_on:
      - postgres
      - redis
    env_file: .env
    # Celery workers handle background tasks (such file imports or federation
    # messaging). The more processes a worker gets, the more tasks
    # can be processed in parallel. However, more processes also means
    # a bigger memory footprint.
    # By default, a worker will span a number of process equal to your number
    # of CPUs. You can adjust this, by explicitly setting the --concurrency
    # flag:
    #   celery -A funkwhale_api.taskapp worker -l INFO --concurrency=4
    command: celery -A funkwhale_api.taskapp worker -l INFO --concurrency=${CELERYD_CONCURRENCY-0}
    environment:
      - C_FORCE_ROOT=true
    volumes:
      - "${MUSIC_DIRECTORY_SERVE_PATH-/srv/funkwhale/data/music}:${MUSIC_DIRECTORY_PATH-/music}:ro"
      - "${MEDIA_ROOT}:${MEDIA_ROOT}"

  celerybeat:
    restart: unless-stopped
    image: funkwhale/funkwhale:${FUNKWHALE_VERSION:-latest}
    # networks:
    #   - default
    depends_on:
      - postgres
      - redis
    env_file: .env
    command: celery -A funkwhale_api.taskapp beat --pidfile= -l INFO

  api:
    restart: unless-stopped
    image: funkwhale/funkwhale:${FUNKWHALE_VERSION:-latest}
    # networks:
    #   - default
    depends_on:
      - postgres
      - redis
    env_file: .env
    volumes:
      - "${MUSIC_DIRECTORY_SERVE_PATH-/srv/funkwhale/data/music}:${MUSIC_DIRECTORY_PATH-/music}:ro"
      - "${MEDIA_ROOT}:${MEDIA_ROOT}"
      - "${STATIC_ROOT}:${STATIC_ROOT}"
      - "${FUNKWHALE_FRONTEND_PATH}:/frontend"
    # ports:
    #   - "5000"

  nginx:
    restart: unless-stopped
    image: nginx
    # networks:
    #   - default
    depends_on:
      - api
    env_file:
      - .env
    environment:
      # Override those variables in your .env file if needed
      - "NGINX_MAX_BODY_SIZE=${NGINX_MAX_BODY_SIZE-100M}"
    volumes:
      - "./nginx/funkwhale.template:/etc/nginx/conf.d/funkwhale.template:ro"
      - "./nginx/funkwhale_proxy.conf:/etc/nginx/funkwhale_proxy.conf:ro"
      - "${MUSIC_DIRECTORY_SERVE_PATH-/srv/funkwhale/data/music}:${MUSIC_DIRECTORY_PATH-/music}:ro"
      - "${MEDIA_ROOT}:${MEDIA_ROOT}:ro"
      - "${STATIC_ROOT}:${STATIC_ROOT}:ro"
      - "${FUNKWHALE_FRONTEND_PATH}:/frontend:ro"
    ports:
      # override those variables in your .env file if needed
      - "${FUNKWHALE_API_IP}:${FUNKWHALE_API_PORT}:80"
    command: >
        sh -c "envsubst \"`env | awk -F = '{printf \" $$%s\", $$1}'`\"
        < /etc/nginx/conf.d/funkwhale.template
        > /etc/nginx/conf.d/default.conf
        && cat /etc/nginx/conf.d/default.conf
        && nginx -g 'daemon off;'"
